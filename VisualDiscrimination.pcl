#VISUAL DISCRIMINATION TASK

begin;

#stimuli
# pd = Practice Different; ps = Practice Same

array <string> practice [8][9]={
{"1pd","d","A","1","0","A","2","0","2"},
{"3pd","d","B","1","55","B","2","55","2"},
{"4ps","s","C","3","165","3"},
{"2pd","d","C","1","0","C","2","0","2"},
{"4pd","d","D","1","55","D","2","55","2"},
{"3ps","s","A","3","165","3"},
{"1ps","s","B","3","110","3"},
{"2ps","s","D","3","110","3"}};
# Defining the array here in pcl makes it possible to use a 2D array with the 2nd dimension defining same or different as a parameter for logging
#Stimulus (e.g. 1pd), SameOrDifferent (d or s), Type (e.g. A10A20),  CorrectAnswer (2=different OR 3=same)

#stimuli
#D = Different; S = Same

array <string> test [40][9]={
{"20d","d","D","3","165","D","4","165","2"},
{"15s","s","D","5","110","3"},
{"1d","d","A","3","0","A","4","0","2"},
{"12d","d","A","1","110","A","2","110","2"},
{"14d","d","C","1","110","C","2","110","2"},
{"8s","s","C","5","55","3"},
{"4s","s","D","5","0","3"},
{"20s","s","B","1","165","3"},
{"9s","s","D","5","55","3"},
{"6s","s","B","5","55","3"},
{"18s","s","C","5","165","3"},
{"16s","s","A","5","165","3"},
{"5d","d","C","2","0","C","6","0","2"},
{"9d","d","B","3","55","B","4","55","2"},
{"18d","d","C","1","165","C","2","165","2"},
{"7d","d","A","1","55","A","2","55","2"},
{"14s","s","C","5","110","3"},
{"17s","s","B","5","165","3"},
{"5s","s","A","5","55","3"},
{"10s","s","A","3","110","3"},
{"19s","s","D","5","165","3"},
{"8d","d","A","3","55","A","4","55","2"},
{"10d","d","C","1","55","C","2","55","2"},
{"13s","s","C","3","110","3"},
{"2s","s","B","3","0","3"},
{"11d","d","D","3","55","D","4","55","2"},
{"6d","d","D","3","0","D","4","0","2"},
{"7s","s","C","3","55","3"},
{"12s","s","B","5","110","3"},
{"11s","s","A","5","110","3"},
{"1s","s","A","5","0","3"},
{"16d","d","A","1","165","A","2","165","2"},
{"19d","d","D","1","165","D","2","165","2"},
{"15d","d","D","1","110","D","2","110","2"},
{"17d","d","B","1","165","B","2","165","2"},
{"3d","d","B","5","0","B","6","0","2"},
{"2d","d","B","1","0","B","2","0","2"},
{"4d","d","D","1","55","D","2","55","2"},
{"3s","s","D","1","0","3"},
{"13d","d","B","3","110","B","4","110","2"}};


#INSTRUCTIONS

instruction1_trial.present();
instruction2_trial.present();

# PRACTICE TRIALS

loop
   int i = 1
until
   i > practice.count()
begin
   isi_trial.present();
   buttons_p.set_filename( "buttons.png" );
   buttons_p.load();
   practice_bmp.set_filename(practice[i][1]+".png");
	practice_bmp.load();    
	# we have 3 variables for the event code: (1) the phase of the experiment, (2) the filename, (3) and the same or different variable
	# we log these by setting the stimulus parameters at the beginning of the sce file
	practice_event.set_event_code("practice," + practice[i][1] + "," + practice [i][2] + "," + practice [i][3] + practice [i][4] + practice [i][5] + practice [i][6] + practice [i][7] + practice [i][8] + "," + practice [i][9]);
   practice_trial.present();      
   i = i + 1

end;

#INSTRUCTION

instruction3_trial.present();
	
#TEST TRIALS

loop
   int i = 1
until
   i > test.count()
begin
   isi_trial.present();
   buttons_t.set_filename( "buttons.png" );
   buttons_t.load();
   test_bmp.set_filename(test[i][1]+".png");
	test_bmp.load();    
	test_event.set_event_code("test," + test[i][1] + "," + test[i][2] + "," + test[i][3] + test[i][4] + test[i][5] + test[i][6] + test[i][7] + test[i][8] + "," + test[i][9]);
   test_trial.present();      
   i = i + 1

end;

#THANKS

thanks_trial.present ();
	
end;
